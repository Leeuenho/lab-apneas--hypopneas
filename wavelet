참고 : https://bskyvision.com/404  >> 푸리에 변환과 웨이브릿 차이, 단점 극복 과정
       https://kr.mathworks.com/videos/understanding-wavelets-part-1-what-are-wavelets-121279.html  >> 웨이블릿 정의
       https://kr.mathworks.com/videos/understanding-wavelets-part-2-types-of-wavelet-transforms-121281.html  >> 웨이블릿 종류 - 연속/ 이산
        


python code : https://pywavelets.readthedocs.io/en/latest/ref/cwt.html // 아직 직접 구현 안해봄

#FT(fast fourier trasform) 푸리에 변환 : 모든 신호 = sin곡선의 합
    따라서 신호 A -> 여러 개의 sin 신호 곡선으로 분해하여, 신호 A가 어떤 주파수들의 합으로 구성되어져 있는지 알 수 있음
    그러나, 시간에 대한 정보가 없다.
    예를 들어, 0~10초 : 30Hz, 10~20초 : 10Hz으로 구성된 신호A 가 있을때 A가 30Hz + 10Hz 인 신호인건 알 수 있으나 시간은 알 수 없다.
    
 푸리에 변환의 시간에 대한 단점 보안 -> 단시간 푸리에 변환
 
 #단시간 푸리에 변환 : 긴 신호를 짧은 시간 단위로 분할 한 후, 푸리에 변환 진행
    짧은 시간 단위 분석 - 특정 시간내에 존재하는 주파수의 종류를 알아내는데 효과적 (시간 분해능 good)
     긴 시간 단위 분석 - 특정 주파수가 존재 하는 시간대를 알아내는데 효과적 (주파수 분해능 good)
     단, 시간 및 주피수 중 한 개를 택해야하기 때문에 시간 분해능이 좋으면서 주파수 분해능도 좋은 분석이 어렵다
     
  단시간 푸리에 변환데대한 단점 보안 -> wavelet
  
  
  #웨이브릿 : 평균이 0인 빠르게 크기가 줄어드는 진동파형
          무한대 시간대인 푸리에 변환과 달리 유한한 시간대의 파형
          다양한 크기와 모양이 존재하기 때문에 옳바른 파형을 선택해 분석하는 것이 중요
          *scaling : 신호의 폭을 줄이거나 늘이는 크기 
                     scale factor = 1/frequency(scale factor는 주파수와 반비례)
                     압축된 wavelet(폭이 좁음) : 급격한 변화 감지
                     확장된 wavelet(폭이 넓음) : 느릿한 변화 감지
                     
          *shifting : 웨이블릿 신호의 지연시간
          
          웨이블릿 _ 연속(CWT)/ 이산(DWT)
          연속 웨이블릿 - 시간 주파수를 분석하고 특정 시간에 대한 주파수 성분을 필터링하는데 유용
          이산 웨이블릿 - 신호 및 이미지의 노이즈를 제거하고 압축하는데 유용
